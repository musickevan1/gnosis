name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        pytest tests/
        
    - name: Build and push Docker images
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        docker build -t gnosis-backend:production .
        docker build -t gnosis-frontend:production ./frontend
        docker push gnosis-backend:production
        docker push gnosis-frontend:production
        
    - name: Deploy to production
      env:
        PROD_HOST: ${{ secrets.PROD_HOST }}
        PROD_SSH_KEY: ${{ secrets.PROD_SSH_KEY }}
      run: |
        echo "$PROD_SSH_KEY" > prod_key
        chmod 600 prod_key
        ssh -i prod_key -o StrictHostKeyChecking=no $PROD_HOST "cd /opt/gnosis && docker-compose pull && docker-compose up -d"
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          Release v${{ github.run_number }}
          
          Changes in this release:
          ${{ github.event.head_commit.message }}
